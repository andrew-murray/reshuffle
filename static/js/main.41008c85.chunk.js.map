{"version":3,"sources":["Device.js","TextEntryDialog.js","TitledDialog.js","socket.js","SessionTable.js","TitleScreen.js","games/OthelloRules.js","games/OthelloBoard.js","games/OthelloStatusBar.js","games/OfflineOthelloGame.js","ChatDrawer.js","games/OnlineOthelloGame.js","App.js","reportWebVitals.js","index.js"],"names":["outgoing","detectMobile","userAgent","navigator","vendor","window","opera","some","toMatchItem","match","detectIOS","process","browser","test","TextEntryDialog","props","React","useState","current","setCurrent","confirmAndReset","onConfirm","Dialog","open","onClose","onCancel","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","text","TextField","margin","fullWidth","onChange","e","target","value","onKeyDown","keyCode","preventDefault","autoFocus","DialogActions","Button","onClick","variant","TitledDialog","title","children","ENDPOINT","URL","location","origin","SERVER_ENDPOINT","socket","io","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","SessionTable","classes","TableContainer","component","Paper","Table","className","aria-label","TableHead","align","TableBody","rooms","length","map","row","scope","name","playerCount","observerCount","onJoin","infoStyles","position","bottom","right","TitleScreen","state","joinDialogOpen","infoDialogOpen","connectedToServer","updateRoomData","roomData","setState","updateConnectedStatus","connected","this","on","emit","interval","setInterval","off","clearInterval","history","makeButton","disabled","joinRoom","roomName","push","actionGroup","onCreate","style","width","display","justifyContent","paddingTop","Card","maxWidth","CardMedia","CircularProgress","marginTop","CardContent","Typography","to","pathname","IconButton","Component","spacing","labels","empty","NEIGHBOUR_OFFSETS","opponentForPlayer","role","Error","toString","isGameCoordinate","game","pos","addPositions","pos1","pos2","scaleOffset","scale","changesFromPlay","opponent","gameMaxSize","Math","max","changes","offset","adjPos","tokenRangeEnd","i","positionToFlip","outcome","sort","a","b","comparePosition","canPlay","moduleExports","boardsEqual","Array","keys","y","x","changesForAllPositions","results","changeset","countCellsForRole","board","total","createBoardStateWithMove","boardClone","rowIndex","from","change","createEmptyBoardState","height","fill","createInitialBoardState","w","playerCanPlay","OthelloCell","hovered","cellState","onMouseOver","onMouseOut","hoverColor","possible","colorForPlayer","player","OthelloRules","impossibleColor","hoverColorForCellState","gameState","defaultColor","hoverIsDifferent","Fragment","shadowBlur","onTap","onDblTap","opacity","undefined","OthelloBoard","availableMoves","showMovesForPlayer","makeCell","cellWidth","cellHeight","yStart","xStart","movePossible","filter","move","moveIsPossible","clickHandler","event","onMove","makeMove","boardPosition","rowArray","colArray","flexWrap","listStyle","padding","chip","OthelloStatusBar","blackFirst","blackActive","active","whiteActive","firstActive","secondActive","Chip","icon","label","blackScore","whiteScore","notifyNoise","Audio","OfflineOthelloGame","windowWidth","windowHeight","updateWindowDimensions","innerWidth","innerHeight","addEventListener","removeEventListener","boardSize","min","updatedBoardState","nextPlayer","play","ChatDrawer","currentMessage","chatDrawerOpen","messageItems","messages","messageIndex","ListItem","ListItemText","primary","onChatSend","onSend","drawerStyle","Object","assign","flexDirection","alignItems","mobile","Device","mobileIOS","DrawerComponent","SwipeableDrawer","Drawer","anchor","onOpen","disableBackdropTransition","disableDiscovery","overflow","flexGrow","List","onSubmit","Input","inputProps","alignSelf","OthelloWithChat","activePlayer","status","joinedRoom","bind","roomID","connectToRoom","msg","concat","othelloState","stateInvalid","gameIsActive","canMakeMoves","styleForGame","content","chatDrawer","App","useHistory","prefersDarkMode","useMediaQuery","useMemo","createMuiTheme","type","useEffect","onRoomCreated","ThemeProvider","CssBaseline","exact","path","OnlineOthelloGame","params","RouterRoot","basename","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41008c85.chunk.js","sourcesContent":["\nconst detectMobile = () =>\n{\n  // the simple version from\n  // https://stackoverflow.com/questions/11381673/detecting-a-mobile-browser\n  const userAgent = (navigator.userAgent||navigator.vendor||window.opera);\n  const toMatch = [\n      /Android/i,\n      /webOS/i,\n      /iPhone/i,\n      /iPad/i,\n      /iPod/i,\n      /BlackBerry/i,\n      /Windows Phone/i\n  ];\n\n  return toMatch.some((toMatchItem) => {\n      return userAgent.match(toMatchItem);\n  });\n}\n\nconst detectIOS = () => {\n  const userAgent = (navigator.userAgent||navigator.vendor||window.opera);\n  return process.browser && /iPad|iPhone|iPod/.test(userAgent);\n}\n\nconst outgoing = { detectMobile, detectIOS };\n\nexport default outgoing;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\n\nfunction TextEntryDialog(props) {\n\n  const [current, setCurrent] = React.useState(\"\");\n\n  const confirmAndReset = ()=>{\n    props.onConfirm(current);\n    setCurrent(\"\");\n  };\n\n  const handleEnter = (e) =>\n  {\n    if(e.keyCode === 13)\n    {\n      e.preventDefault();\n      confirmAndReset();\n    }\n  };\n\n  return (\n    <Dialog open={props.open} onClose={props.onCancel} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {props.text}\n        </DialogContentText>\n        <TextField\n          margin=\"dense\"\n          id=\"name\"\n          fullWidth\n          onChange={(e)=>{setCurrent(e.target.value);}}\n          onKeyDown={handleEnter}\n          autoFocus\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onCancel} variant=\"contained\">\n          Cancel\n        </Button>\n        <Button onClick={confirmAndReset} variant=\"contained\">\n          Confirm\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nTextEntryDialog.propTypes = {\n  text:PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  onConfirm: PropTypes.func,\n  onCancel: PropTypes.func\n};\n\nexport default TextEntryDialog;\n","import React from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PropTypes from 'prop-types';\n\nfunction TitledDialog(props) {\n\n  return (\n    <Dialog open={props.open} onClose={props.onClose}>\n      <DialogTitle id=\"text-dialog-title\">{props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {props.children}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.onClose} variant=\"contained\">\n          ok\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n\nTitledDialog.propTypes = {\n  title: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func\n};\n\nexport default TitledDialog;\n","import io from \"socket.io-client\";\n\nconst path = new URL( window.location.origin );\nconst ENDPOINT = process.env.NODE_ENV === 'production' ? process.env.SERVER_ENDPOINT ? process.env.SERVER_ENDPOINT\n                                                                                     : \"wss://reshuffle.herokuapp.com/\"\n                                                       : path.protocol + \"//\" + path.hostname + \":8080\";\nlet socket = io(ENDPOINT);\nexport default socket;\n","import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function SessionTable(props) {\n  const classes = useStyles();\n  // the only weird behaviour in the below,\n  // is we ensure the table \"non-empty\" ish, when provided an empty list of rows\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Room</StyledTableCell>\n            <StyledTableCell align=\"right\">Players</StyledTableCell>\n            <StyledTableCell align=\"right\">Observers</StyledTableCell>\n            <StyledTableCell align=\"right\"></StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {(props.rooms.length == 0 ? [{}] : props.rooms).map((row) => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.name}\n              </StyledTableCell>\n              <StyledTableCell align=\"right\">{row.playerCount}</StyledTableCell>\n              <StyledTableCell align=\"right\">{row.observerCount}</StyledTableCell>\n              <StyledTableCell align=\"right\">\n                {row.name && <Button variant=\"contained\" onClick={()=>props.onJoin(row.name)}>Join</Button>}\n              </StyledTableCell>\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport TextEntryDialog from \"./TextEntryDialog\";\nimport TitledDialog from \"./TitledDialog\";\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Paper from '@material-ui/core/Paper';\nimport socket from \"./socket\";\n\nimport SessionTable from \"./SessionTable\";\n\nconst styler = (theme) => ({\n  actionGroup: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  }\n});\n\nconst infoStyles = {\n  position:\"absolute\",\n  bottom: 0,\n  right: 0\n};\n\nclass TitleScreen extends React.Component\n{\n\n  state = {\n    rooms: [],\n    joinDialogOpen: false,\n    infoDialogOpen: false,\n    connectedToServer: false\n  }\n\n  constructor(props)\n  {\n    super(props);\n    this.updateRoomData = (roomData)=>{this.setState({rooms: roomData.rooms});};\n    this.updateConnectedStatus = ()=>{this.setState({connectedToServer: socket.connected});};\n  }\n\n\n  componentDidMount()\n  {\n    this.updateConnectedStatus();\n    socket.on(\"connect\", this.updateConnectedStatus);\n    socket.on(\"disconnect\", this.updateConnectedStatus);\n    socket.on(\"othello.rooms.list\", this.updateRoomData);\n    socket.emit(\"othello.rooms.request\");\n    this.interval = setInterval(\n      ()=>{socket.emit(\"othello.rooms.request\");},\n      5000\n    );\n  }\n\n  componentWillUnmount()\n  {\n    socket.off(\"connect\", this.updateConnectedStatus);\n    socket.off(\"disconnect\", this.updateConnectedStatus);\n    socket.off(\"othello.rooms.list\", this.updateRoomData);\n    clearInterval(\n      this.interval\n    );\n  }\n\n  render()\n  {\n    const classes = this.props.classes;\n    const history = this.props.history;\n\n    const makeButton = (text, disabled, onClick) => <Button\n      key={text}\n      variant=\"contained\" aria-label={text}\n      onClick={onClick}\n      disabled={disabled}\n    >\n      {text}\n    </Button>\n\n    const joinRoom = (roomName) =>\n    {\n      if(roomName)\n      {\n        history.push(\"/othello/room/\" + roomName);\n        if(this.state.joinDialogOpen){this.setState({joinDialogOpen: false});}\n      }\n    };\n\n    return (\n      <div>\n        <SessionTable\n          onJoin={joinRoom}\n          rooms={this.state.rooms}\n          />\n        <div className={classes.actionGroup}>\n          {makeButton(\"Create Room\", !this.state.connectedToServer, this.props.onCreate)}\n          {makeButton(\"Find Room\", !this.state.connectedToServer, ()=>{this.setState( {joinDialogOpen: true} );})}\n          {makeButton(\"Practice\", false, ()=>{ history.push(\"/othello/practice\"); })}\n        </div>\n        {!this.state.connectedToServer &&\n          <div style={{width:\"100%\", display: \"flex\", justifyContent: \"center\", paddingTop: \"1vh\"}}>\n            <Card style={{maxWidth: 350}}>\n              <Paper>\n                <CardMedia>\n                  <CircularProgress style={{marginTop:\"3vh\"}}/>\n                </CardMedia>\n                <CardContent>\n                  <Typography>This demo uses a low-cost backend server which starts up on demand.</Typography>\n                  <Typography>If no one else is playing, there'll typically be a 30 second delay before the server is ready.</Typography>\n                </CardContent>\n              </Paper>\n            </Card>\n          </div>\n        }\n        <TextEntryDialog\n          open={this.state.joinDialogOpen}\n          text=\"Enter room name\"\n          onConfirm={joinRoom}\n          onCancel={()=>{this.setState( {joinDialogOpen: false} );}}\n        />\n        <TitledDialog\n          open={this.state.infoDialogOpen}\n          title=\"Attributions\"\n          onClose={()=>{this.setState( {infoDialogOpen: false} );}}\n        >\n          <Typography>\n            reshuffle uses sounds from <Link\n              to={{ pathname: \"https://www.zapsplat.com/\" }}\n              target=\"_blank\"\n             >\n              zapsplat\n            </Link>\n          </Typography>\n        </TitledDialog>\n        <div style={infoStyles}>\n          <IconButton onClick={()=>{this.setState( {infoDialogOpen: true} );}}>\n            <InfoIcon color=\"primary\"/>\n          </IconButton>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styler)(TitleScreen);\n","\nconst labels = {\n    empty: 0,\n    black: 1,\n    white: 2\n};\n\nconst NEIGHBOUR_OFFSETS = [\n    [-1, 0],\n    [-1, 1],\n    [0, 1],\n    [1, 1],\n    [1, 0],\n    [1, -1],\n    [0, -1],\n    [-1, -1]\n];\n\nconst opponentForPlayer = (role) => {\n  if(role !== labels.black && role !== labels.white)\n  {\n    throw Error(\n      \"Invalid player provided to opponentForPlayer: \" + role.toString()\n    );\n  }\n  return role === labels.black ? labels.white : labels.black;\n};\n\nconst isGameCoordinate = (game, pos) => {\n  return (\n    game.length >= 1 && // sanity check\n    0 <= pos[0] &&\n    pos[0] < game.length &&\n    0 <= pos[1] &&\n    pos[1] < game[0].length\n  );\n};\n\nconst addPositions = (pos1,pos2) => {\n  return [pos1[0] + pos2[0], pos1[1] + pos2[1]];\n};\n\nconst scaleOffset = (pos, scale) => {\n  return [pos[0] * scale, pos[1] * scale];\n}\n\nconst comparePosition = (a,b) => {\n  // negative value <=> a < b\n  // positive value <=> a > b\n  // 0 <=> a == b\n  if( a[0] !== b[0] )\n  {\n    return a[0] < b[0] ? -1 : +1;\n  }\n  else if( a[1] !== b[1] )\n  {\n    return a[1] < b[1] ? -1 : +1;\n  }\n  else\n  {\n    return 0;\n  }\n};\n\nconst changesFromPlay = (game, role, pos) =>\n{\n  if(game[pos[0]][pos[1]] === labels.white || game[pos[0]][pos[1]] === labels.black)\n  {\n    return {};\n  }\n  const opponent = opponentForPlayer(role);\n  const gameMaxSize = Math.max(game.length, game[0].length);\n\n  let changes = [];\n  for(const offset of NEIGHBOUR_OFFSETS)\n  {\n    const adjPos = addPositions(pos, offset);\n    if(isGameCoordinate(game, adjPos) && game[adjPos[0]][adjPos[1]] === opponent)\n    {\n      let tokenRangeEnd = null;\n      for(let i = 2; i < gameMaxSize; ++i)\n      {\n        const positionToFlip = addPositions( pos, scaleOffset(offset, i) );\n        if(!isGameCoordinate(game, positionToFlip))\n        {\n          // reached the end of the board, haven't found a valid range to flip\n          break;\n        }\n        else if( game[positionToFlip[0]][positionToFlip[1]] === role )\n        {\n          // reached the end of a valid array of tokens to flip\n          tokenRangeEnd = i;\n          break;\n        }\n        else if( game[positionToFlip[0]][positionToFlip[1]] === opponent )\n        {\n          // still covering a valid array of opponent's pieces, continue\n          continue;\n        }\n        else\n        {\n          // reached the end of a range of opponent's pieces and met an empty square\n          // player == role will not \"enclose\" this range, no changes are valid\n          break;\n        }\n      }\n\n      // populate changes based on the assessed range, could be handled\n      // inside the loop instead\n      if(tokenRangeEnd)\n      {\n        for(let i = 1; i < tokenRangeEnd; ++i)\n        {\n          const positionToFlip = addPositions( pos, scaleOffset(offset, i) );\n          changes.push( {\n            position: positionToFlip,\n            outcome: role\n          } );\n        }\n      }\n    }\n  }\n  if(changes.length === 0)\n  {\n    return [];\n  }\n  // note we include the played upon square in the list of changes\n  // we handle that here, so that it isn't included at the end of multiple ranges\n  changes.push( {\n    position: pos,\n    outcome: role\n  } );\n  changes.sort((a,b)=>comparePosition(a.position, b.position));\n  return changes;\n};\n\nconst canPlay = (game, role, pos) => {\n  if(!isGameCoordinate(game, pos))\n  {\n    return false;\n  }\n  if(game[pos[0]][pos[1]] !== labels.empty)\n  {\n      return false;\n  }\n  const changes = changesFromPlay(game, role, pos);\n  // othello rules dictate the only plays you can make\n  // are those which change opposing pieces\n  return changes.length > 0;\n};\n\nconst playerCanPlay = (game, role) => {\n  for(const y of [...Array(game.length).keys()])\n  {\n    for(const x of [...Array(game[0].length).keys()])\n    {\n      if(canPlay(game, role, [y,x]))\n      {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nconst createBoardStateWithMove = (game, position, role) => {\n  const changes = changesFromPlay(game, role, position);\n  let boardClone = [...Array(game.length).keys()].map(\n    rowIndex => Array.from(game[rowIndex])\n  );\n  for(const change of changes )\n  {\n    boardClone[ change.position[0] ][ change.position[1] ] = change.outcome;\n  }\n  return boardClone;\n}\n\nconst createEmptyBoardState = (height, width) => {\n  const e = labels.empty;\n  return [...Array(height).keys()].map((rowIndex)=>{\n    // empty rows\n    return Array(width).fill(e);\n  });\n}\n\nconst boardsEqual = (a,b)=>\n{\n  // todo: validate boards are square\n  if(a.length !== b.length || a[0].length !== b[0].length)\n  {\n    return false;\n  }\n  for(const y of [...Array(a.length).keys()])\n  {\n    for(const x of [...Array(b[0].length).keys()])\n    {\n      if(a[y][x] !== b[y][x])\n      {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst countCellsForRole = (board, role) =>\n{\n  let total = 0;\n  for(const y of [...Array(board.length).keys()])\n  {\n    for(const x of [...Array(board[0].length).keys()])\n    {\n      if(board[y][x] === role)\n      {\n        total++;\n      }\n    }\n  }\n  return total;\n}\n\nconst createInitialBoardState = () => {\n  const e = labels.empty;\n  const w = labels.white;\n  const b = labels.black;\n  return [\n    [e,e,e,e,e,e,e,e],\n    [e,e,e,e,e,e,e,e],\n    [e,e,e,e,e,e,e,e],\n    [e,e,e,b,w,e,e,e],\n    [e,e,e,w,b,e,e,e],\n    [e,e,e,e,e,e,e,e],\n    [e,e,e,e,e,e,e,e],\n    [e,e,e,e,e,e,e,e]\n  ];\n};\n\nconst changesForAllPositions = (game, role) => {\n  if(game.length === 0)\n  {\n    return [];\n  }\n  let results = [];\n  for(const y of [...Array(game.length).keys()])\n  {\n    for(const x of [...Array(game[0].length).keys()])\n    {\n      const changes = changesFromPlay(game, role, [y,x]);\n      if(changes.length > 0)\n      {\n        results.push({position: [y,x], changeset: changes});\n      }\n    }\n  }\n  return results;\n}\n\nconst moduleExports = {\n  boardsEqual,\n  canPlay,\n  changesForAllPositions,\n  changesFromPlay,\n  countCellsForRole,\n  createBoardStateWithMove,\n  createEmptyBoardState,\n  createInitialBoardState,\n  isGameCoordinate,\n  labels,\n  opponentForPlayer,\n  playerCanPlay\n};\n\n\nexport default moduleExports;\n","import React, { Component } from 'react';\nimport { Stage, Layer, Rect, Circle } from 'react-konva';\nimport OthelloRules from \"./OthelloRules\";\n\nclass OthelloCell extends React.Component{\n\n  state = {\n    hovered: false\n  }\n\n  render(){\n    const onMouseOver = () => {\n      this.setState({hovered: true});\n    };\n\n    const onMouseOut = () => {\n      this.setState({hovered: false});\n    };\n\n    const defaultColorForCellState = (cellState) => {\n      return cellState === OthelloRules.labels.white ? \"white\"\n           : cellState === OthelloRules.labels.black ? \"black\"\n                                                     : \"#b87340\";\n    };\n\n    const hoverColorForCellState = (cellState, possible) => {\n      const colorForPlayer = this.props.player === OthelloRules.labels.white ? \"white\" : \"black\";\n      return cellState === OthelloRules.labels.white ? \"white\"\n           : cellState === OthelloRules.labels.black ? \"black\"\n           : possible                     ? colorForPlayer\n                                          : this.props.impossibleColor;\n    };\n\n    const hoverColor = hoverColorForCellState(this.props.gameState, this.props.possible);\n    const defaultColor = defaultColorForCellState(this.props.gameState);\n    const hoverIsDifferent = hoverColor !== defaultColor;\n\n    return(\n      <React.Fragment>\n        <Rect\n          y={this.props.y}\n          x={this.props.x}\n          width={this.props.width}\n          height={this.props.height}\n\n          fill={\"#b87340\"}\n          shadowBlur={5}\n\n          onClick={this.props.onClick}\n          onTap={this.props.onClick}\n          onDblTap={this.props.onClick}\n\n          onMouseOver={onMouseOver}\n          onMouseOut={onMouseOut}\n        />\n        <Circle\n          y={this.props.y + (this.props.height/2)}\n          x={this.props.x + (this.props.width/2)}\n          width={this.props.width * 0.85}\n          height={this.props.height * 0.85}\n\n          fill={this.state.hovered ? hoverColor: defaultColor}\n          opacity={(hoverIsDifferent && this.state.hovered) ? 0.5 : undefined }\n\n          onClick={this.props.onClick}\n          onTap={this.props.onClick}\n          onDblTap={this.props.onClick}\n\n          onMouseOver={onMouseOver}\n          onMouseOut={onMouseOut}\n        />\n      </React.Fragment>\n    );\n  }\n};\n\n\nclass OthelloBoard extends Component {\n  render() {\n    let availableMoves = [];\n    if(this.props.showMovesForPlayer)\n    {\n      availableMoves = OthelloRules.changesForAllPositions(\n        this.props.game,\n        this.props.showMovesForPlayer\n      );\n    }\n\n    const width = this.props.width;\n    const height = this.props.height;\n\n    const rows = 8;\n    const columns = 8;\n\n    const moveIsPossible = (cellState, pos) =>\n    {\n      const empty = cellState === OthelloRules.labels.empty;\n      return empty && availableMoves.filter(\n        move => move.position[0] === pos[0] && move.position[1] === pos[1]\n      ).length > 0;\n    };\n\n    const makeMove = (y,x,possible)=>\n    {\n      if(this.props.onMove && possible)\n      {\n        this.props.onMove( {position: [y,x]} );\n      }\n    };\n\n    const makeCell = (y,x,cellState) => {\n      const cellWidth = width / columns;\n      const cellHeight =  height / rows;\n      const yStart = y * cellHeight;\n      const xStart = x * cellWidth;\n      const movePossible = moveIsPossible(cellState, [y,x]);\n      const clickHandler = movePossible ? (event)=>{makeMove(y,x,true)} : undefined;\n      return (\n        <OthelloCell\n          key={\"othello-cell-\" + y.toString() + \"-\" + x.toString()}\n          width={cellWidth}\n          height={cellHeight}\n          boardPosition={[y,x]}\n          player={this.props.showMovesForPlayer}\n          x={xStart}\n          y={yStart}\n          gameState={cellState}\n          possible={movePossible}\n          onClick={clickHandler}\n        />\n      );\n    };\n\n    const rowArray = [...Array(rows).keys()];\n    const colArray = [...Array(columns).keys()];\n\n    // Stage is a div container\n    // Layer is actual canvas element (so you may have several canvases in the stage)\n    // And then we have canvas shapes inside the Layer\n    return (\n      <Stage width={width} height={height} style={this.props.style}>\n        <Layer>\n          {\n            rowArray.map( y => { return colArray.map( x => makeCell(y,x,this.props.game[y][x]))})\n          }\n        </Layer>\n      </Stage>\n    );\n  }\n}\n\nexport default OthelloBoard;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport OthelloRules from \"./OthelloRules\";\nimport Chip from '@material-ui/core/Chip';\nimport CircleIcon from '@material-ui/icons/FiberManualRecord';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexWrap: 'wrap',\n    listStyle: 'none',\n    padding: theme.spacing(0.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nfunction OthelloStatusBar(props) {\n\n  const classes = useStyles();\n  const blackFirst = props.role === OthelloRules.labels.black;\n  const blackActive = OthelloRules.labels.black === props.active;\n  const whiteActive = OthelloRules.labels.white === props.active;\n  const firstActive = (blackFirst && blackActive) || (!blackFirst && whiteActive);\n  const secondActive = (!blackFirst && blackActive) || (blackFirst && whiteActive);\n\n  return (\n    <div className={classes.root} style={{margin: \"1vh\"}}>\n        <Chip key=\"score-1\"\n          icon={<CircleIcon style={{color: blackFirst ? \"#000000\" : \"#ffffff\"}}/>}\n          label={blackFirst ? props.blackScore : props.whiteScore}\n          className={classes.chip}\n          style={firstActive ? undefined : {opacity: \"50%\"}}\n        />\n        <Chip key=\"score-2\"\n          icon={<CircleIcon style={{color: blackFirst ? \"#ffffff\" : \"#000000\"}}/>}\n          label={blackFirst ? props.whiteScore : props.blackScore }\n          className={classes.chip}\n          style={secondActive ? undefined : {opacity: \"50%\"}}\n        />\n    </div>\n  );\n}\n\nexport default OthelloStatusBar;\n","import {Component} from \"react\"\nimport OthelloBoard from \"./OthelloBoard\"\nimport OthelloRules from \"./OthelloRules\";\nimport OthelloStatusBar from \"./OthelloStatusBar\"\nimport Button from '@material-ui/core/Button';\n\nconst mp3File = \"zapsplat_impacts_wood_thin_small_panel_knock_hit_lite_muted_004_39796.mp3\";\nconst notifyNoise = new Audio(process.env.PUBLIC_URL + \"/\" + mp3File);\n\nclass OfflineOthelloGame extends Component\n{\n  state = {\n    board: OthelloRules.createInitialBoardState(),\n    player: OthelloRules.labels.black,\n    windowWidth: null,\n    windowHeight: null\n  }\n\n  constructor(props)\n  {\n    super(props);\n    this.updateWindowDimensions = ()=>{this.setState((props,state)=>{\n         return{ windowWidth: window.innerWidth, windowHeight: window.innerHeight };\n    });};\n  }\n\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n\n  componentWillUnmount()\n  {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  render()\n  {\n    const whiteScore = OthelloRules.countCellsForRole(this.state.board, OthelloRules.labels.white);\n    const blackScore = OthelloRules.countCellsForRole(this.state.board, OthelloRules.labels.black);\n    // default board to be only as big as 85% of the screen's width\n    // we have additional content to fit vertically, so leave some extra wiggle room\n    const boardSize = Math.min( Math.min( this.state.windowWidth * 0.85, this.state.windowHeight * 0.75 ) , 450 );\n\n    const sendReset = () =>\n    {\n      this.setState( {board: OthelloRules.createInitialBoardState()} );\n    };\n\n    return (\n      <main>\n      <OthelloBoard\n        width={boardSize}\n        height={boardSize}\n        game={this.state.board}\n        showMovesForPlayer={this.state.player}\n        onMove={(action)=>{\n          if(action.position)\n          {\n            const updatedBoardState = OthelloRules.createBoardStateWithMove(\n              this.state.board,\n              action.position,\n              this.state.player\n            );\n            const opponent = OthelloRules.opponentForPlayer(this.state.player);\n            const opponentCanPlay = OthelloRules.playerCanPlay(\n              updatedBoardState,\n              opponent\n            );\n            const nextPlayer = opponentCanPlay ? opponent: this.state.player;\n\n            notifyNoise.play();\n\n            this.setState(\n              {\n                board: updatedBoardState,\n                player: nextPlayer\n              },\n              ()=>{notifyNoise.play();}\n            );\n          }\n        }}\n      />\n      <OthelloStatusBar\n        role={OthelloRules.labels.black}\n        active={this.state.player}\n        whiteScore={whiteScore}\n        blackScore={blackScore}\n      />\n        <div style={{padding: \"1vh\"}}>\n          <Button variant=\"contained\" onClick={sendReset} color=\"primary\"> Reset </Button>\n        </div>\n      </main>\n    );\n  }\n}\n\n\nexport default OfflineOthelloGame;\n","import React from 'react';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport Device from \"./Device\";\n\nclass ChatDrawer extends React.Component\n{\n    constructor(props)\n    {\n      super(props);\n      this.state = {\n        currentMessage: \"\",\n        chatDrawerOpen: true\n      }\n    }\n\n    render()\n    {\n      const messageItems = [...Array(this.props.messages.length).keys()].map(messageIndex=>\n        <ListItem key={\"message-\" + messageIndex.toString()}>\n          <ListItemText primary={this.props.messages[messageIndex]}>\n          </ListItemText>\n        </ListItem>\n      );\n\n      const onMessageChange = (event)=>\n      {\n        this.setState( {currentMessage: event.target.value} );\n      };\n\n      const onChatSend = (event)=>\n      {\n        if(this.state.currentMessage && this.props.onSend){\n          const currentMessage = this.state.currentMessage;\n          this.setState(\n            {currentMessage:\"\"},\n            ()=>{this.props.onSend(currentMessage);}\n          );\n        }\n        event.preventDefault();\n      };\n\n      const localStyle = {\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-end\"\n      };\n      const drawerStyle = Object.assign( Object.assign({}, localStyle), this.props.style );\n\n      const mobile = Device.detectMobile();\n      const mobileIOS = mobile && Device.detectIOS();\n      const DrawerComponent = !mobile ? Drawer : SwipeableDrawer;\n      // another option for this list, is react-window?\n      return (\n          <DrawerComponent\n            variant={!mobile ? \"permanent\" : undefined}\n            anchor=\"right\"\n            style={drawerStyle}\n            className={this.props.className}\n            // stateManagement on all the time, but is irrelevant when not on mobile\n            open={this.state.chatDrawerOpen}\n            onOpen={()=>{this.setState({chatDrawerOpen: true})}}\n            onClose={()=>{this.setState({chatDrawerOpen: false})}}\n            // recommended default settings for SwipeableDrawer\n            disableBackdropTransition={mobileIOS ? true : undefined}\n            disableDiscovery={mobileIOS ? true : undefined}\n          >\n            <Paper\n              // column-reverse means the browser will scroll to the bottom!\n              // todo: this may not be a long-term solution because all the\n              // chat is bottom aligned when the chat doesn't fill the page\n              style={{\n                overflow: \"auto\",\n                flexGrow: 1,\n                display: \"flex\",\n                flexDirection: \"column-reverse\",\n                width: drawerStyle.width ? drawerStyle.width : \"inherit\"\n              }}\n              >\n              <List aria-label=\"menu\" >\n                {messageItems}\n              </List>\n            </Paper>\n            <form onSubmit={onChatSend}>\n              <div style={{display: \"flex\", width: drawerStyle.width ? drawerStyle.width : \"inherit\"}}>\n                  <Input inputProps={{ 'aria-label': 'enter message' }} value={this.state.currentMessage} onChange={onMessageChange} style={{flexGrow: 1}}/>\n                  <Button variant=\"contained\" color=\"primary\" onClick={onChatSend} style={{alignSelf: \"flex-end\"}}>Send</Button>\n              </div>\n            </form>\n          </DrawerComponent>\n      );\n    }\n}\n\nexport default ChatDrawer;\n","import React from 'react';\nimport ChatDrawer from \"../ChatDrawer\";\nimport OthelloBoard from \"./OthelloBoard\"\nimport OthelloRules from \"./OthelloRules\";\nimport OthelloStatusBar from \"./OthelloStatusBar\"\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\nimport socket from \"../socket\"\n\nconst othelloStyles = (theme) => { return {\n  root: {\n    display: \"flex\"\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  chatDrawer: {\n    width: 300\n  }\n} };\n\nconst mp3File = \"zapsplat_impacts_wood_thin_small_panel_knock_hit_lite_muted_004_39796.mp3\";\nconst notifyNoise = new Audio(process.env.PUBLIC_URL + \"/\" + mp3File);\n\nclass OthelloWithChat extends React.Component\n{\n  state = {\n    messages: [],\n    board: null,\n    role: null,\n    activePlayer: null,\n    status: null,\n    joinedRoom: null,\n    windowWidth: 0,\n    windowHeight: 0\n  }\n  constructor(props)\n  {\n    super(props)\n    // I think this is the cleanest way to implement this functionality\n    // https://stackoverflow.com/questions/36862334/get-viewport-window-height-in-reactjs\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  connectToRoom(roomID)\n  {\n    if((this.state.joinedRoom !== roomID))\n    {\n      this.setState(\n        { joinedRoom: roomID },\n        () => {\n          socket.emit('chat.join', roomID);\n          socket.emit(\"othello.join\", roomID);\n        }\n      );\n    }\n  }\n\n  updateWindowDimensions() {\n    this.setState((props,state)=>{ return{ windowWidth: window.innerWidth, windowHeight: window.innerHeight } });\n  }\n\n  componentDidMount() {\n    this.connectToRoom(this.props.roomID);\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n    socket.on('chat.message', (msg)=>{\n      this.setState( (state, props) => {\n          return {messages: state.messages.concat(msg)};\n      });\n    });\n    socket.on('othello.update', (othelloState)=>{\n      this.setState((state,props)=>{\n        const stateInvalid = !state.board\n          || !state.activePlayer\n          || !state.role\n          || !state.status;\n        if( stateInvalid\n          || othelloState.role !== state.role\n          || othelloState.activePlayer !== state.activePlayer\n          || othelloState.status !== state.status\n          || !OthelloRules.boardsEqual(state.board, othelloState.board))\n        {\n          if(!stateInvalid)\n          {\n            notifyNoise.play();\n          }\n          return {\n            board: othelloState.board,\n            activePlayer: othelloState.activePlayer,\n            role: othelloState.role,\n            status: othelloState.status\n          };\n        }\n        else\n        {\n          return {};\n        }\n      })\n    });\n  }\n\n  componentDidUpdate()\n  {\n    this.connectToRoom(this.props.roomID);\n  }\n\n  componentWillUnmount()\n  {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n    socket.off('chat.message');\n    socket.off('othello.update');\n  }\n\n  render()\n  {\n    const sendSwap = () =>\n    {\n      if(this.state.role!== null)\n      {\n        socket.emit(\"othello.swap\");\n      }\n    };\n\n    const sendReset = () =>\n    {\n      if(this.state.role!== null && socket)\n      {\n        socket.emit(\"othello.reset\");\n      }\n    };\n\n    const sendConcede = () =>\n    {\n      if(this.state.role!==null)\n      {\n        socket.emit(\"othello.concede\");\n      }\n    }\n\n    const whiteScore = !this.state.board ? 0 :\n      OthelloRules.countCellsForRole(this.state.board, OthelloRules.labels.white);\n    const blackScore = !this.state.board ? 0 :\n      OthelloRules.countCellsForRole(this.state.board, OthelloRules.labels.black);\n\n    const gameIsActive = this.state.status === \"active\";\n    const canMakeMoves = this.state.role === this.state.activePlayer ? this.state.role: null;\n    const styleForGame = this.state.activePlayer === null ? {opacity: \"50%\"} : undefined;\n\n    // default board to be only as big as 85% of the screen's width\n    // we have additional content to fit vertically, so leave some extra wiggle room\n    const boardSize = Math.min( Math.min( this.state.windowWidth * 0.85, this.state.windowHeight * 0.75 ) , 450 );\n\n    return (\n      <div className={this.props.classes.root}>\n        <main className={this.props.classes.content}>\n          <OthelloBoard\n            width={boardSize}\n            height={boardSize}\n            game={this.state.board === null ? OthelloRules.createEmptyBoardState(8,8) : this.state.board}\n            // provide a player, OthelloBoard requires one for now\n            showMovesForPlayer={canMakeMoves}\n            onMove={(action)=>{\n              if(action.position)\n              {\n                socket.emit(\"othello.move\", action);\n              }\n            }}\n            style={styleForGame}\n          />\n          <OthelloStatusBar\n            role={this.state.role}\n            active={this.state.activePlayer}\n            whiteScore={whiteScore}\n            blackScore={blackScore}\n          />\n          {this.state.role ?\n            <div style={{padding: \"1vh\"}}>\n              <Button variant=\"contained\" onClick={sendSwap} disabled={gameIsActive} color=\"primary\"> Swap </Button>\n              <Button variant=\"contained\" onClick={sendReset} disabled={gameIsActive} color=\"primary\"> Reset </Button>\n              <Button variant=\"contained\" onClick={sendConcede} disabled={!gameIsActive} color=\"primary\"> Concede </Button>\n            </div>\n            : <Paper style={{padding: \"1vh\"}}><Typography>You are observing.</Typography></Paper>\n          }\n        </main>\n        <ChatDrawer\n          messages={this.state.messages}\n          onSend={(msg)=>{socket.emit(\"chat.message\", msg);}}\n          style={{width: Math.min(300, this.state.windowWidth * 0.75)}}\n        />\n      </div>\n    );\n  }\n}\n\nexport default withStyles(othelloStyles)(OthelloWithChat);\n","import './App.css';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory\n} from \"react-router-dom\";\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport TitleScreen from \"./TitleScreen\";\nimport OfflineOthelloGame from \"./games/OfflineOthelloGame\"\nimport OnlineOthelloGame from \"./games/OnlineOthelloGame\"\n\nimport socket from \"./socket\"\n\nfunction App() {\n\n  let history = useHistory();\n\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n        },\n      }),\n    [prefersDarkMode],\n  );\n\n  React.useEffect(()=>{\n    const onRoomCreated = (roomID) =>\n    {\n      history.push(\"othello/room/\" + roomID);\n    };\n    socket.on(\"room.created\", onRoomCreated)\n    return ()=>{socket.off(\"room.created\", onRoomCreated);}\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n        <div className=\"App\">\n          <Switch>\n            <Route\n              exact path=\"/\"\n              component={(props)=>\n                <TitleScreen\n                  onCreate={()=>{socket.emit(\"chat.create\");}}\n                  match={props.match}\n                  history={props.history}\n                />\n              }\n            />\n            <Route exact path=\"/othello/practice\">\n              <OfflineOthelloGame />\n            </Route>\n            <Route\n              path=\"/othello/room/:roomID/\"\n              component={(props)=> <OnlineOthelloGame roomID={props.match.params.roomID} />}\n            />\n          </Switch>\n        </div>\n    </ThemeProvider>\n  );\n}\n\nfunction RouterRoot()\n{\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <App/>\n    </Router>\n  );\n}\n\nexport default RouterRoot;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}